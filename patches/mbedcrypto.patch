diff --git a/lib/mbedcrypto/include/mbedtls/build_info.h b/lib/mbedcrypto/include/mbedtls/build_info.h
index 23f85ba01..3386b5294 100644
--- a/lib/mbedcrypto/include/mbedtls/build_info.h
+++ b/lib/mbedcrypto/include/mbedtls/build_info.h
@@ -55,8 +55,12 @@
 
 #if !defined(MBEDTLS_CONFIG_FILE)
 #include "mbedtls/mbedtls_config.h"
+#elif MBEDTLS_CONFIG_FILE == 1
+#include "lib/ext/mbedcrypto/mbedcrypto_config/tfm_mbedcrypto_config_default.h"
+#elif MBEDTLS_CONFIG_FILE == 2
+#include "bl2/ext/mcuboot/config/mcuboot-mbedtls-cfg.h"
 #else
-#include MBEDTLS_CONFIG_FILE
+#error MBEDTLS_CONFIG_FILE invalid value
 #endif
 
 #if defined(MBEDTLS_CONFIG_VERSION) && ( \
diff --git a/lib/mbedcrypto/library/code_share.c b/lib/mbedcrypto/library/code_share.c
new file mode 100644
index 000000000..2bf67fb42
--- /dev/null
+++ b/lib/mbedcrypto/library/code_share.c
@@ -0,0 +1,3 @@
+/* This is a deliberately empty file just to check whether the patch for enabling
+ * extensive crypto code sharing was already applied on the mbedtls library.
+ */
diff --git a/lib/mbedcrypto/library/platform.c b/lib/mbedcrypto/library/platform.c
index e742fde7c..c309dc0c5 100644
--- a/lib/mbedcrypto/library/platform.c
+++ b/lib/mbedcrypto/library/platform.c
@@ -53,8 +53,8 @@ static void platform_free_uninit( void *ptr )
 #define MBEDTLS_PLATFORM_STD_FREE     platform_free_uninit
 #endif /* !MBEDTLS_PLATFORM_STD_FREE */
 
-static void * (*mbedtls_calloc_func)( size_t, size_t ) = MBEDTLS_PLATFORM_STD_CALLOC;
-static void (*mbedtls_free_func)( void * ) = MBEDTLS_PLATFORM_STD_FREE;
+void * (*mbedtls_calloc_func)( size_t, size_t ) = MBEDTLS_PLATFORM_STD_CALLOC;
+void (*mbedtls_free_func)( void * ) = MBEDTLS_PLATFORM_STD_FREE;
 
 void * mbedtls_calloc( size_t nmemb, size_t size )
 {
diff --git a/lib/mbedcrypto/library/platform_util.c b/lib/mbedcrypto/library/platform_util.c
index 4e97e4d1b..f2401846d 100644
--- a/lib/mbedcrypto/library/platform_util.c
+++ b/lib/mbedcrypto/library/platform_util.c
@@ -62,7 +62,7 @@
  * mbedtls_platform_zeroize() to use a suitable implementation for their
  * platform and needs.
  */
-static void * (* const volatile memset_func)( void *, int, size_t ) = memset;
+void * (* const volatile memset_func)( void *, int, size_t ) = memset;
 
 void mbedtls_platform_zeroize( void *buf, size_t len )
 {
